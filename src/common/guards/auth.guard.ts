import type { Router } from "vue-router";

export function authGuard(router: Router) {
  router.beforeEach((to, from, next) => {
    console.log(from);
    const accessToken = localStorage.getItem("token"); // เบเบถเบ token เบเบฒเบ localStorage

    // เบเบงเบเบชเบญเบเบงเปเบฒเปเปเบฒเปเบเบเปเปเบเปเบญเบเบเบฒเบเบขเบทเบเบขเบฑเบเบเบปเบงเบเบปเบ (public pages)
    if (to.meta.skipAuthCheck) {
      console.log("โญ Skipping auth check for public page:", to.name);

      // เบเปเบฒเปเบเบฑเบเปเปเบฒ login เปเบฅเบฐเบกเบต token เปเบฅเปเบง เปเบซเป redirect เปเบเปเปเบฒ customer
      if (to.name === "login" && accessToken) {
        console.log(
          "๐ Already have token, redirecting from login to customer"
        );
        next({ name: "customer" });
        return;
      }

      next(); // เปเบซเปเปเบเบเปเปเบชเบณเบฅเบฑเบ public pages เบญเบทเปเบเป
      return;
    }

    // เบชเบณเบฅเบฑเบเปเปเบฒเบเบตเปเบเปเบญเบเบเบฒเบ authentication
    if (!accessToken) {
      // เบเปเปเบกเบต token เปเบซเป redirect เปเบเปเปเบฒ login
      console.log("๐ No token found, redirecting to login");
      next({
        name: "login",
      });
    }

    // เบกเบต token เปเบซเปเปเบเบเปเปเปเบเป
    console.log("โ Token found, allowing access to:", to.name);
    next();
  });
}